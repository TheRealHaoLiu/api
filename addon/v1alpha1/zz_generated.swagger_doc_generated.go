package v1alpha1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_AddOnInfo = map[string]string{
	"":            "AddOnInfo contains the name of ManagedClusterAddon CR, display name we will use for UI, and description of an addon",
	"name":        "Name is the same as the metadata.name of the referenced ManagedClusterAddon CR",
	"displayName": "DisplayName is the addon name displayed on UI",
	"description": "Description is the description of the addon displayed on UI",
}

func (AddOnInfo) SwaggerDoc() map[string]string {
	return map_AddOnInfo
}

var map_ClusterManagerAddOn = map[string]string{
	"":       "ClusterManagerAddOn represents the desired state and current status of one/many managed cluster addons. ClusterManagerAddOn is a cluster scoped resource.",
	"spec":   "Spec represents a desired configuration for the agent on the cluster manager addon",
	"status": "Status represents the current status of cluster manager addon",
}

func (ClusterManagerAddOn) SwaggerDoc() map[string]string {
	return map_ClusterManagerAddOn
}

var map_ClusterManagerAddOnList = map[string]string{
	"":         "ClusterManagerAddOnList is a collection of cluster manager addons.",
	"metadata": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
	"items":    "Items is a list of cluster manager addons.",
}

func (ClusterManagerAddOnList) SwaggerDoc() map[string]string {
	return map_ClusterManagerAddOnList
}

var map_ClusterManagerAddOnSpec = map[string]string{
	"":       "ClusterManagerAddOnSpec provides the information of addon CRD, related ManagedClusterAddon names, and addon information we will use for UI",
	"crdRef": "CRDRef is the CRD name of the addon CRs, which used for addon configurations",
	"addons": "AddOns is the array of addon information helps the UI to find and display each addons",
}

func (ClusterManagerAddOnSpec) SwaggerDoc() map[string]string {
	return map_ClusterManagerAddOnSpec
}

var map_ClusterManagerAddOnStatus = map[string]string{
	"": "ClusterManagerAddOnStatus represents the current status of cluster manager addon.",
}

func (ClusterManagerAddOnStatus) SwaggerDoc() map[string]string {
	return map_ClusterManagerAddOnStatus
}

var map_AddOnStatusCondition = map[string]string{
	"":                   "AddOnStatusCondition represents the state of the addon's managed and monitored components.",
	"type":               "type specifies the aspect reported by this condition.",
	"status":             "status of the condition, one of True, False, Unknown.",
	"lastTransitionTime": "lastTransitionTime is the time of the last update to the current status property.",
	"reason":             "reason is the CamelCase reason for the condition's current status.",
	"message":            "message provides additional information about the current condition. This is only to be consumed by humans.",
}

func (AddOnStatusCondition) SwaggerDoc() map[string]string {
	return map_AddOnStatusCondition
}

var map_ManagedClusterAddOn = map[string]string{
	"":       "ManagedClusterAddOn is the Custom Resource object which holds the current state of an addon. This object is used by addon operators to convey their state. The resource should be created in the ManagedCluster's cluster namespace.",
	"spec":   "spec holds configuration that could apply to any operator.",
	"status": "status holds the information about the state of an operator.  It is consistent with status information across the Kubernetes ecosystem.",
}

func (ManagedClusterAddOn) SwaggerDoc() map[string]string {
	return map_ManagedClusterAddOn
}

var map_ManagedClusterAddOnList = map[string]string{
	"": "ManagedClusterAddOnList is a list of ManagedClusterAddOn resources.",
}

func (ManagedClusterAddOnList) SwaggerDoc() map[string]string {
	return map_ManagedClusterAddOnList
}

var map_ManagedClusterAddOnSpec = map[string]string{
	"":               "ManagedClusterAddOnSpec is empty for now, but you could imagine holding information like \"pause\".",
	"updateApproved": "UpdateApproved represents that user has approved the update of the particular addon for a specific the managed cluster on the hub. The default value is false, it can only be set to true when the latestVersion and currentVersion is on different version. When the value is set true, the controller/operator that manages the addon will proceed to update the addon. The value will be set to false by mutating webhook when latestVersion matches currentVersion.",
}

func (ManagedClusterAddOnSpec) SwaggerDoc() map[string]string {
	return map_ManagedClusterAddOnSpec
}

var map_ManagedClusterAddOnStatus = map[string]string{
	"":                "ManagedClusterAddOnStatus provides information about the status of the operator.",
	"conditions":      "conditions describes the state of the operator's managed and monitored components.",
	"addonResource":   "addonResource is a reference  to an object that contain the configuration of the addon",
	"latestVersion":   "LatestVersion indicates the latest available Version for the addon",
	"currentVersion":  "CurrentVersion indicates the current Version of the addon During the agent update process this field will be set to same value as latestVersion after the update has been completed",
	"updateAvailable": "UpdateAvailable indicates if there is an version update that is available for the addon it will be set to false if currentVersion.version != latestVersion.version it will be set to true if currentVersion.version == latestVersion.version",
}

func (ManagedClusterAddOnStatus) SwaggerDoc() map[string]string {
	return map_ManagedClusterAddOnStatus
}

var map_ObjectReference = map[string]string{
	"":         "ObjectReference contains enough information to let you inspect or modify the referred object.",
	"group":    "group of the referent.",
	"resource": "resource of the referent.",
	"name":     "name of the referent.",
}

func (ObjectReference) SwaggerDoc() map[string]string {
	return map_ObjectReference
}

var map_RelatedImage = map[string]string{
	"":         "RelatedImage represents information for one of the images that the agent uses its associated key.",
	"imageKey": "ImageKey is the key to link the image to specific deployment for the agent this will be use for backward compatability, i.e if the hub updated but agent have not the agent controller can use this information to continue to manage the agent.",
	"image":    "ImagePullSpec represents the desired image of the component for the addon agent.",
}

func (RelatedImage) SwaggerDoc() map[string]string {
	return map_RelatedImage
}

var map_Release = map[string]string{
	"":              "Release represents an agent release version and it's related images.",
	"version":       "version is a semantic versioning identifying the update version. When this field is part of spec, version is optional if image is specified.",
	"relatedImages": "RelatedImages is list of images will be used for the specific version this will be use for backward compatability (i.e hub updated but agent have not)",
}

func (Release) SwaggerDoc() map[string]string {
	return map_Release
}

// AUTO-GENERATED FUNCTIONS END HERE
